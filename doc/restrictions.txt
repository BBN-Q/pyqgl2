Some current limitations of the QGL2 language
 - including ways it is not Python

* In general, *args and **kwargs are not well handled - for type
  checking arguments, etc
* QGL2 looks at variables named `QBIT_*` as canonical qbits. Another
  variable that happens to have that name might cause problems. See
  issue #77.
* qgl2decl method declarations cannot be nested
 * Make all functions top level functions
* Methods with a return statement are not inlined
 * In general, methods with a return statement are not well handled
* QGL2 programs should import the QGL2 stubs of QGL1 functions. EG:
  from qgl2.qgl2 import qgl2decl, qbit, sequence, concur
  from qgl2.basic_sequences.qgl2_plumbing import init
* QGL2 does not have "real" qubits, so you cannot use their
  parameters, or look at the topology graph to find edges for
  example. This will change. See issue #76, 65
* QGL2 main function cannot take arguments, specifical Qubits. See
  issue #62.
* There is no current good way to do control flow based on measurement
  results, particularly measurements from a different channel. This
  will change. See issue #66.
* Do not use QGL1 control flow functions directly. Use python to set
  up your control flow.
* Do not use QGL1 functions that return a list of pulses. Much better
  (and may be soon required) to rewrite that as a QGL2 function. Issue #79.
* Do not use a QGL2 function where a pure python function will do;
  using QGL2 is slower / less efficient.

Things to fix:

* 'label' argument to Qubit() must be a literal string - no variable
  whose value is a string, no expression, etc. Issue #75.
 * EG see `test_Sequences` which loops over qbit names. That won't work.
* A Qubit() creation is only recognized if it is in an assignment. EG
  x = Qubit("alabel") works, but
  return Qubit("alabel") does not. Issue #75.
* Constant or function references are missing their required imports
  in output code. EG use of numpy.pi or a function reference to
  QGL.PulseShapes.tanh. See Issue #58, #64
* Cannot iterate over generators (like `product`). See issue #63.
* Various ways to read & use file contents (like `with open`)
  fail. See issue #67, 68, 69.
* QGL2 performance must be improved.
* QGL2 does not currently use repeat blocks, in part to avoid repeat
  blocks that contain a barrier. Issue #74
* Provide way to give arguments to `compileFunction` as arguments to
  the function being compiled. Issue #50.

Other to do items for QGL2:

* Need to do more error checking on arguments other than qbit
* Large pieces of code need refactoring
* Rewrite left side of assign of qbits
* APS2 stack is only 8 or 16 frames. So track nested Call()s and
  ensure we don't get that far.

