Some current limitations of the QGL2 language
 - including ways it is not Python

Note that for the latest set of known issues or planned enhancements,
see [https://github.com/BBN-Q/pyqgl2/issues].

* In general, *args and **kwargs are not well handled - for type
  checking arguments, etc
* QGL2 looks at variables named `QBIT_*` as canonical qbits. Another
  variable that happens to have that name might cause problems.
* qgl2decl method declarations cannot be nested
 * Make all functions top level functions
* Methods with a return statement are not inlined
 * In general, methods with a return statement are not well handled
* QGL2 programs should import the QGL2 stubs of QGL1 functions. EG:
  from qgl2.qgl2 import qgl2decl, qbit, sequence, concur
  from qgl2.basic_sequences.qgl2_plumbing import init
* QGL2 uses read-only qubits, so you can read their
  parameters, but cannot edit them. Note also that the full QGL
  ChannelLibrary is not generally available. See issue #37.
* There is no current good way to do control flow based on measurement
  results, particularly measurements from a different channel. This
  will change. See issue #24.
* Do not use a QGL2 function where a pure python function will do;
  using QGL2 is slower / less efficient.

Other to do items for QGL2:

* Need to do more error checking on arguments other than qbit
* Large pieces of code need refactoring
* Rewrite left side of assign of qbits
* APS2 stack is only 8 or 16 frames. So track nested Call()s and
  ensure we don't get that far.

